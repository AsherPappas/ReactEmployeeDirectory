{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Asher\\\\OneDrive\\\\Desktop\\\\ReactEmployeeDirectory\\\\my-app\\\\src\\\\pages\\\\Main.js\";\nimport Row from \"../components/Row\";\nimport API from \"../utils/API\";\nimport React, { Component } from \"react\";\nimport Search from \"../components/Search\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass Main extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      people: [{\n        picture: {\n          thumbnail: \"\"\n        },\n        name: {\n          first: \"\",\n          last: \"\"\n        },\n        location: {\n          city: \"\",\n          state: \"\"\n        },\n        dob: {\n          age: \"\"\n        },\n        nat: \"\"\n      }],\n      order: \"ascend\",\n      search: \"\",\n      filterPeople: []\n    };\n\n    this.handleInputChange = event => {\n      const value = event.target.value;\n      const name = event.target.name;\n      this.setState({\n        [name]: value\n      });\n      this.filterPeople(value);\n    };\n\n    this.filterPeople = search => {\n      const newPeople = this.state.filterPeople.filter(person => {\n        return person.name.first.toLowerCase().includes(search.toLowerCase()) || person.name.last.toLowerCase().includes(search.toLowerCase()) || person.location.city.toLowerCase().includes(search.toLowerCase());\n      });\n      this.setState({\n        people: newPeople\n      });\n    };\n\n    this.sortList = (columnName, subName) => {\n      this.state.people.sort((a, b) => {\n        //Use localeCompare to compare the two strings\n        // check to see does it have a subName?\n        return subName ? //check if this is a string (to handle sort age)\n        typeof a[columnName][subName] === \"string\" ? // if string and has subName\n        a[columnName][subName].localeCompare(b[columnName][subName]) : //if not a string (age)\n        a[columnName][subName] - b[columnName][subName] : //if string and no subName  (this line is the default like final else)\n        a[columnName].localeCompare(b[columnName]);\n      });\n      this.setState({\n        people: this.state.people\n      });\n    };\n  }\n\n  // get people for display and put them in array \n  componentDidMount() {\n    API.getRandomEmployees().then(res => {\n      this.setState({\n        people: res.data.results,\n        filterPeople: res.data.results\n      });\n    }).catch(err => console.log(\"API CALL \" + err));\n  } // search input box\n\n\n  // header row of \"table\"\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container\",\n      children: [/*#__PURE__*/_jsxDEV(Search, {\n        handleInputChange: this.handleInputChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"text-muted text-center\",\n        children: \" Employee information can be sorted by clicking any of the headings\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"row display\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"col-md-2\",\n          onClick: () => this.sortList(\"gender\"),\n          children: /*#__PURE__*/_jsxDEV(\"h3\", {\n            children: \" Image \"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 111,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 110,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"col-md-2\",\n          onClick: () => this.sortList(\"name\", \"first\"),\n          children: /*#__PURE__*/_jsxDEV(\"h3\", {\n            children: \" Employee Name\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 115,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 114,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"col-md-3\",\n          onClick: () => this.sortList(\"location\", \"city\"),\n          children: /*#__PURE__*/_jsxDEV(\"h3\", {\n            children: \" Location\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 119,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 118,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"col-md-2\",\n          onClick: () => this.sortList(\"dob\", \"age\"),\n          children: /*#__PURE__*/_jsxDEV(\"h3\", {\n            children: \"Age\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 123,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 122,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"col-md-2\",\n          onClick: () => this.sortList(\"nat\"),\n          children: /*#__PURE__*/_jsxDEV(\"h3\", {\n            children: \"Nationality\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 127,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 126,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Row, {\n        people: this.state.people\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 131,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nexport default Main;","map":{"version":3,"sources":["C:/Users/Asher/OneDrive/Desktop/ReactEmployeeDirectory/my-app/src/pages/Main.js"],"names":["Row","API","React","Component","Search","Main","state","people","picture","thumbnail","name","first","last","location","city","dob","age","nat","order","search","filterPeople","handleInputChange","event","value","target","setState","newPeople","filter","person","toLowerCase","includes","sortList","columnName","subName","sort","a","b","localeCompare","componentDidMount","getRandomEmployees","then","res","data","results","catch","err","console","log","render"],"mappings":"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","sourcesContent":["import Row from \"../components/Row\";\r\nimport API from \"../utils/API\";\r\nimport React, { Component } from \"react\";\r\nimport Search from \"../components/Search\";\r\n\r\nclass Main extends Component {\r\n    state = {\r\n        people: [{\r\n            picture: {\r\n                thumbnail: \"\",\r\n            },\r\n            name: {\r\n                first: \"\",\r\n                last: \"\",\r\n            },\r\n            location: {\r\n                city: \"\",\r\n                state: \"\"\r\n            },\r\n            dob: {\r\n                age: \"\"\r\n            },\r\n            nat: \"\"\r\n        }],\r\n        order: \"ascend\",\r\n        search: \"\",\r\n        filterPeople: []\r\n    }\r\n\r\n    // get people for display and put them in array \r\n    componentDidMount() {\r\n        API.getRandomEmployees()\r\n            .then(res => {\r\n           \r\n                this.setState({\r\n                   \r\n                    people: res.data.results,\r\n                    filterPeople: res.data.results,\r\n                })\r\n                    \r\n            })\r\n            .catch(err => console.log(\"API CALL \" + err))\r\n    }\r\n\r\n\r\n    // search input box\r\n    handleInputChange = event => {\r\n        const value = event.target.value;\r\n        const name = event.target.name;\r\n        this.setState({\r\n            [name]: value\r\n        });\r\n       \r\n        this.filterPeople(value)\r\n    };\r\n\r\n\r\n    //filter function based on above input\r\n    filterPeople = (search) => {   \r\n        const newPeople =  this.state.filterPeople.filter(person => {  \r\n            return (\r\n            person.name.first.toLowerCase()\r\n                .includes(search.toLowerCase()) ||\r\n            person.name.last.toLowerCase()\r\n            .includes(search.toLowerCase())  ||\r\n            person.location.city.toLowerCase()\r\n            .includes(search.toLowerCase())  \r\n            )\r\n            });\r\n            this.setState({\r\n               people: newPeople\r\n            })\r\n    }\r\n\r\n    //sort by any of the headings clicked (image will sort female/male)\r\n       sortList = (columnName, subName) => {\r\n        this.state.people.sort((a,b) => {\r\n            //Use localeCompare to compare the two strings\r\n \r\n            // check to see does it have a subName?\r\n           return subName ? \r\n           //check if this is a string (to handle sort age)\r\n           typeof a[columnName][subName] === \"string\" ? \r\n          \r\n           // if string and has subName\r\n           a[columnName][subName].localeCompare(b[columnName][subName]) :\r\n           \r\n           //if not a string (age)\r\n           a[columnName][subName] - b[columnName][subName]:\r\n\r\n           //if string and no subName  (this line is the default like final else)\r\n           a[columnName].localeCompare(b[columnName])\r\n\r\n        })\r\n        this.setState({people: this.state.people})\r\n    }\r\n\r\n    // header row of \"table\"\r\n    render() {\r\n        return (\r\n            <div className=\"container\">\r\n\r\n                <Search\r\n                    handleInputChange={this.handleInputChange}\r\n                   \r\n                />\r\n                <p className=\"text-muted text-center\"> Employee information can be sorted by clicking any of the headings</p>\r\n                <div className=\"row display\" >\r\n\r\n                    <div className=\"col-md-2\" onClick={()=> this.sortList(\"gender\")}>\r\n                        <h3> Image </h3>\r\n                    </div>\r\n\r\n                    <div className=\"col-md-2\" onClick={()=> this.sortList(\"name\", \"first\")}>\r\n                        <h3> Employee Name</h3>\r\n                    </div>\r\n\r\n                    <div className=\"col-md-3\" onClick={()=> this.sortList(\"location\", \"city\")}>\r\n                        <h3> Location</h3>\r\n                    </div>\r\n\r\n                    <div className=\"col-md-2\" onClick={()=> this.sortList(\"dob\", \"age\")}>\r\n                        <h3>Age</h3>\r\n                    </div>\r\n\r\n                    <div className=\"col-md-2\" onClick={()=> this.sortList(\"nat\")}>\r\n                        <h3>Nationality</h3>\r\n                    </div>\r\n                </div>\r\n                {/* display each person */}\r\n                <Row\r\n                    people={this.state.people}\r\n                 \r\n                />\r\n            </div>\r\n\r\n        )\r\n    }\r\n}\r\n\r\nexport default Main;"]},"metadata":{},"sourceType":"module"}